name: Release Nookbag

on:
  push:
    tags:
      - 'nookbag-v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: |
            **/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build and pack
        run: ./scripts/pack.sh

      - name: Derive tag and version
        id: vars
        run: |
          TAG_REF="${GITHUB_REF##*/}"
          echo "tag=${TAG_REF}" >> $GITHUB_OUTPUT
          # expect tag like nookbag-v0.0.7
          VERSION="${TAG_REF#nookbag-}"
          ZIP_NAME="nookbag-${VERSION}.zip"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "zip_name=${ZIP_NAME}" >> $GITHUB_OUTPUT

      - name: Rename packaged zip to match tag
        run: |
          # Find the zip produced by pack.sh (nookbag-YYYYmmdd-HHMMSS.zip)
          SOURCE_ZIP=$(ls -1 dist/nookbag-*.zip | head -n1)
          if [ -z "$SOURCE_ZIP" ]; then echo "No packaged zip found"; exit 1; fi
          mv "$SOURCE_ZIP" "dist/${{ steps.vars.outputs.zip_name }}"

      - name: Install GitHub CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq
          type -p curl >/dev/null || sudo apt-get install -y curl
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update -y
          sudo apt-get install -y gh

      - name: Create GitHub Release with gh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.vars.outputs.tag }}
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          # Create release notes from GitHub (commits & contributors)
          NOTES=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${GITHUB_REPOSITORY}/releases/generate-notes \
            -f tag_name="$TAG" \
            -f target_commitish="$GITHUB_SHA" | jq -r '.body')
          # Create the release (idempotent)
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG exists, updating notes..."
            gh release edit "$TAG" --notes "$NOTES"
          else
            gh release create "$TAG" --title "$VERSION" --notes "$NOTES"
          fi

      - name: Upload asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.vars.outputs.tag }}
        run: |
          gh release upload "$TAG" "dist/${{ steps.vars.outputs.zip_name }}" --clobber
